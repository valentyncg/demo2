apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: cg-main-webapp
    name: cg-main-webapp
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cg-main-webapp
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cg-main-webapp
      spec:
        containers:
        - env:
          - name: BACKEND_URL
            value: https://indev.contguard.com 
          image: contguardregistry.azurecr.io/cg-main-webapp-dev:6
          imagePullPolicy: Always
          name: cg-main-webapp
          ports:
          - containerPort: 80
            name: 80tcp01
            protocol: TCP
          - containerPort: 8080
            name: nginx8080
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /var/log/nginx
            name: logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: contguardregistry
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: cg-main-webapp-logs
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app: cg-main-webapp
    creationTimestamp: null
    name: cg-main-webapp
    namespace: default
  spec:
    ports:
    - name: 80tcp01-cg-main-webapp
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: cg-main-webapp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: { }

kind: List

metadata: {}
